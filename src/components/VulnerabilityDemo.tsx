// src/components/VulnerabilityDemo.tsx - Versi√≥n CTF (herramientas de investigaci√≥n)
import React, { useState, useContext } from 'react';
import { AuthContext } from '../App';
import { makeDirectRequest, createFakeToken } from '../services/api';

const VulnerabilityDemo: React.FC = () => {
  const { user } = useContext(AuthContext);
  const [results, setResults] = useState<any[]>([]);
  const [loading, setLoading] = useState(false);
  const [activeTest, setActiveTest] = useState<string>('');

  const addResult = (title: string, data: any, status: 'success' | 'failure' | 'discovery' = 'discovery') => {
    setResults(prev => [...prev, {
      id: Date.now(),
      title,
      data,
      status,
      timestamp: new Date().toLocaleTimeString()
    }]);
  };

  // Test de reconocimiento
  const runReconnaissance = async () => {
    setActiveTest('recon');
    setLoading(true);
    
    try {
      addResult('üîç Starting Reconnaissance Phase', {
        target: 'Employee Profile System',
        current_user: user?.username,
        user_id: user?.id,
        role: user?.role
      });

      // Enumerar perfiles
      for (let i = 1; i <= 6; i++) {
        try {
          const userData = await makeDirectRequest('GET', `/users/${i}`);
          addResult(
            `Profile Discovery - Employee #${i}`,
            {
              found: true,
              username: userData.username,
              role: userData.role,
              access_level: i !== user?.id ? 'unauthorized' : 'authorized',
              sensitive_data: userData.profile ? 'exposed' : 'none'
            },
            'discovery'
          );
        } catch (error) {
          addResult(`Profile Scan - ID ${i}`, { 
            found: false, 
            error: 'not_found' 
          }, 'failure');
        }
        
        // Delay para simular reconocimiento realista
        await new Promise(resolve => setTimeout(resolve, 200));
      }

    } finally {
      setLoading(false);
      setActiveTest('');
    }
  };

  // Test de escalada de privilegios
  const runPrivilegeTest = async () => {
    setActiveTest('privilege');
    setLoading(true);
    
    try {
      addResult('üöÄ Testing Privilege Boundaries', {
        current_role: user?.role,
        testing: 'administrative_access'
      });

      // Test acceso administrativo
      try {
        const adminData = await makeDirectRequest('GET', '/admin/users');
        addResult(
          'Administrative Access Test',
          {
            result: 'success',
            data_retrieved: adminData.length + ' employee records',
            access_should_be: 'admin_only',
            actual_access: 'unrestricted',
            risk_level: 'high'
          },
          'discovery'
        );
      } catch (error: any) {
        addResult('Administrative Access Test', { 
          result: 'blocked',
          reason: error.message 
        }, 'failure');
      }

      // Test informaci√≥n del sistema
      try {
        const systemData = await makeDirectRequest('GET', '/system/info');
        addResult(
          'System Information Access',
          {
            result: 'success',
            exposed_data: Object.keys(systemData),
            critical_exposure: systemData.secret_key ? 'jwt_secret_exposed' : 'none',
            impact: 'critical'
          },
          'discovery'
        );
      } catch (error: any) {
        addResult('System Information Access', { 
          result: 'blocked',
          reason: error.message 
        }, 'failure');
      }

    } finally {
      setLoading(false);
      setActiveTest('');
    }
  };

  // Test de manipulaci√≥n avanzada
  const runAdvancedTests = async () => {
    setActiveTest('advanced');
    setLoading(true);
    
    try {
      addResult('üé≠ Advanced Security Research', {
        phase: 'token_analysis_and_manipulation',
        researcher: user?.username
      });

      // An√°lisis de token
      const currentToken = localStorage.getItem('token');
      if (currentToken) {
        addResult(
          'Token Analysis',
          {
            token_location: 'localStorage',
            token_preview: currentToken.substring(0, 50) + '...',
            vulnerability: 'client_side_storage',
            exploitation_potential: 'token_theft_via_xss'
          },
          'discovery'
        );

        // Demostrar creaci√≥n de token falso
        try {
          const fakeToken = createFakeToken({
            id: 999,
            username: 'security_researcher',
            role: 'admin',
            email: 'researcher@example.com'
          });
          
          addResult(
            'Token Forgery Test',
            {
              original_role: user?.role,
              forged_token_created: true,
              forged_role: 'admin',
              warning: 'This demonstrates JWT secret compromise',
              token_preview: fakeToken.substring(0, 50) + '...'
            },
            'discovery'
          );
        } catch (error) {
          addResult('Token Forgery Test', { 
            result: 'failed',
            reason: 'Could not forge token' 
          }, 'failure');
        }
      }

      // Test modificaci√≥n de datos
      try {
        const targetUserId = user?.id === 1 ? 2 : 1;
        await makeDirectRequest('PUT', `/users/${targetUserId}`, {
          fullName: 'Modified by Security Researcher',
          department: 'Security Testing'
        });
        
        addResult(
          'Cross-User Data Modification',
          {
            modified_user: targetUserId,
            modification_type: 'profile_update',
            authorization: 'bypassed',
            impact: 'data_integrity_compromise'
          },
          'discovery'
        );
      } catch (error: any) {
        addResult('Cross-User Modification Test', { 
          result: 'blocked',
          reason: error.message 
        }, 'failure');
      }

    } finally {
      setLoading(false);
      setActiveTest('');
    }
  };

  const clearResults = () => setResults([]);

  const exportResults = () => {
    const reportData = {
      timestamp: new Date().toISOString(),
      researcher: user?.username,
      target_system: 'Employee Management Portal',
      findings: results
    };
    
    const blob = new Blob([JSON.stringify(reportData, null, 2)], {
      type: 'application/json'
    });
    
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `security_research_report_${Date.now()}.json`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="max-w-6xl mx-auto space-y-6">
      <div className="bg-white rounded-lg shadow-md p-6">
        <h1 className="text-2xl font-bold mb-4">üîß Security Research Laboratory</h1>
        
        <div className="bg-gradient-to-r from-blue-50 to-purple-50 border border-blue-200 p-4 rounded mb-6">
          <h3 className="font-bold text-blue-800 mb-2">üéØ Research Environment</h3>
          <p className="text-blue-700 text-sm mb-2">
            Welcome to the security research lab. This environment allows you to test various 
            security scenarios and explore system boundaries in a controlled setting.
          </p>
          <div className="text-blue-600 text-xs">
            Current researcher: <strong>{user?.username}</strong> | 
            Permission level: <strong>{user?.role}</strong> |
            Research session: Active
          </div>
        </div>

        {/* Test Categories */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
          <button
            onClick={runReconnaissance}
            disabled={loading}
            className={`p-4 rounded-lg border-2 transition-all text-left ${
              activeTest === 'recon' 
                ? 'border-blue-500 bg-blue-50' 
                : 'border-gray-300 bg-white hover:border-blue-300'
            } disabled:opacity-50`}
          >
            <div className="flex items-center mb-2">
              <span className="text-2xl mr-2">üîç</span>
              <h3 className="font-bold text-blue-700">Reconnaissance</h3>
            </div>
            <p className="text-sm text-blue-600">
              Discover system boundaries and accessible resources
            </p>
            <div className="text-xs text-gray-500 mt-2">
              ‚Ä¢ Profile enumeration
              ‚Ä¢ Access boundary testing
              ‚Ä¢ Data exposure analysis
            </div>
          </button>

          <button
            onClick={runPrivilegeTest}
            disabled={loading}
            className={`p-4 rounded-lg border-2 transition-all text-left ${
              activeTest === 'privilege' 
                ? 'border-orange-500 bg-orange-50' 
                : 'border-gray-300 bg-white hover:border-orange-300'
            } disabled:opacity-50`}
          >
            <div className="flex items-center mb-2">
              <span className="text-2xl mr-2">üöÄ</span>
              <h3 className="font-bold text-orange-700">Privilege Testing</h3>
            </div>
            <p className="text-sm text-orange-600">
              Test administrative access and system information exposure
            </p>
            <div className="text-xs text-gray-500 mt-2">
              ‚Ä¢ Administrative interface access
              ‚Ä¢ System configuration exposure
              ‚Ä¢ Privilege escalation paths
            </div>
          </button>

          <button
            onClick={runAdvancedTests}
            disabled={loading}
            className={`p-4 rounded-lg border-2 transition-all text-left ${
              activeTest === 'advanced' 
                ? 'border-purple-500 bg-purple-50' 
                : 'border-gray-300 bg-white hover:border-purple-300'
            } disabled:opacity-50`}
          >
            <div className="flex items-center mb-2">
              <span className="text-2xl mr-2">üé≠</span>
              <h3 className="font-bold text-purple-700">Advanced Research</h3>
            </div>
            <p className="text-sm text-purple-600">
              Token manipulation and deep system exploitation
            </p>
            <div className="text-xs text-gray-500 mt-2">
              ‚Ä¢ JWT token analysis
              ‚Ä¢ Token forgery attempts
              ‚Ä¢ Data modification testing
            </div>
          </button>
        </div>

        {/* Results Panel */}
        <div className="flex justify-between items-center mb-4">
          <h2 className="text-xl font-bold">üìã Research Findings</h2>
          <div className="flex space-x-2">
            <button
              onClick={exportResults}
              disabled={results.length === 0}
              className="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded text-sm transition-colors disabled:opacity-50"
            >
              üìÑ Export Report
            </button>
            <button
              onClick={clearResults}
              className="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded text-sm transition-colors"
            >
              üóëÔ∏è Clear Results
            </button>
          </div>
        </div>

        {loading && (
          <div className="bg-blue-50 border border-blue-200 p-4 rounded mb-4">
            <div className="flex items-center">
              <div className="loading-spinner w-4 h-4 mr-3"></div>
              <span className="text-blue-700">
                Running {activeTest} tests... Please wait.
              </span>
            </div>
          </div>
        )}

        <div className="space-y-3 max-h-96 overflow-y-auto">
          {results.map(result => (
            <div
              key={result.id}
              className={`p-4 rounded border ${
                result.status === 'discovery' 
                  ? 'bg-yellow-50 border-yellow-200' 
                  : result.status === 'success'
                    ? 'bg-green-50 border-green-200'
                    : 'bg-gray-50 border-gray-200'
              }`}
            >
              <div className="flex justify-between items-start mb-2">
                <h3 className={`font-bold ${
                  result.status === 'discovery' ? 'text-yellow-800' : 
                  result.status === 'success' ? 'text-green-800' : 'text-gray-800'
                }`}>
                  {result.status === 'discovery' ? 'üîç' : 
                   result.status === 'success' ? '‚úÖ' : '‚ùå'} {result.title}
                </h3>
                <span className="text-xs text-gray-500">{result.timestamp}</span>
              </div>
              <pre className="text-sm overflow-x-auto bg-white p-3 rounded border max-h-32">
                {JSON.stringify(result.data, null, 2)}
              </pre>
            </div>
          ))}
        </div>

        {results.length === 0 && (
          <div className="text-center text-gray-500 py-12">
            <div className="text-6xl mb-4">üî¨</div>
            <h3 className="text-xl font-medium mb-2">Ready for Security Research</h3>
            <p className="text-gray-400">
              Select a test category above to begin your security analysis
            </p>
          </div>
        )}

        {/* Research Tips */}
        <div className="mt-6 bg-gradient-to-r from-indigo-50 to-blue-50 border border-indigo-200 rounded-lg p-4">
          <h3 className="font-bold text-indigo-800 mb-3">üí° Research Methodology Tips</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
            <div>
              <h4 className="font-semibold text-indigo-700 mb-2">üîç Investigation Approach:</h4>
              <ul className="text-indigo-600 space-y-1 text-xs">
                <li>‚Ä¢ Start with reconnaissance to map the attack surface</li>
                <li>‚Ä¢ Test privilege boundaries systematically</li>
                <li>‚Ä¢ Document all findings with evidence</li>
                <li>‚Ä¢ Look for patterns in system behavior</li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold text-indigo-700 mb-2">üõ†Ô∏è Manual Testing:</h4>
              <ul className="text-indigo-600 space-y-1 text-xs">
                <li>‚Ä¢ Use browser DevTools for deeper analysis</li>
                <li>‚Ä¢ Modify URLs and parameters manually</li>
                <li>‚Ä¢ Inspect network requests and responses</li>
                <li>‚Ä¢ Test edge cases and boundary conditions</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityDemo;